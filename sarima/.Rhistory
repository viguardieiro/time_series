points(arima_forecast_season$`Point Forecast`, col = "cyan")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(arima_forecast_season$`Point Forecast`, col = "cyan")
arima_forecast_season$`Point Forecast`
arima_forecast_season <-sapply(arima_forecast_season, InvBoxCox, lambda = lambda)
points(arima_forecast_season$`Point Forecast`, col = "cyan")
arima_forecast_season
season.forecast <- stl.fit$time.series[(165-12):(167-12), 1]
arima_forecast_season <- as.data.frame(forecast(model.AR2, h = 3)) + season.forecast
arima_forecast_season <- as.data.frame(sapply(arima_forecast_season, InvBoxCox, lambda = lambda))
arima_forecast_season
points(arima_forecast_season$`Point Forecast`, col = "cyan")
points(arima_forecast_season$`Point Forecast`, col = "cyan")
points(x = c(25, 26, 27), y = arima_forecast_season$`Point Forecast`, col = "cyan")
stl.fit$time.series[(165-12):(167-12), 1]
forecast(stl.fit, h = 3)
InvBoxCox(forecast(stl.fit, h = 3), lambda = lambda)
InvBoxCox(stl.fit$time.series[(165-12):(167-12), 1], lambda = lambda)
sapply(as.data.frame(forecast(model.AR2, h =3)), InvBoxCox, lambda = lambda)
sapply(as.data.frame(forecast(model.AR2, h =3)), InvBoxCox, lambda = lambda) + InvBoxCox(stl.fit$time.series[(165-12):(167-12), 1], lambda = lambda)
arima_forecast_season <- sapply(as.data.frame(forecast(model.AR2, h =3)),
InvBoxCox,
lambda = lambda) +
InvBoxCox(stl.fit$time.series[(165-12):(167-12), 1], lambda = lambda)
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(x = c(25, 26, 27), y = arima_forecast_season$`Point Forecast`, col = "cyan")
arima_forecast_season[:, 1]
arima_forecast_season[, 1]
arima_forecast_season
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], col = "cyan")
#season.forecast <- stl.fit$time.series[(165-12):(167-12), 1]
#arima_forecast_season <- as.data.frame(forecast(model.AR2, h = 3)) + season.forecast
arima_forecast_season <- sapply(as.data.frame(forecast(model.AR2, h =3)) + stl.fit$time.series[(165-12):(167-12), 1],
InvBoxCox,
lambda = lambda)
arima_forecast_season[, 1]
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], col = "cyan")
?points
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], col = "cyan", pch = 46)
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], col = "cyan", pch = ".")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = ".")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16)
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "cyan")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
arima_forecast_season
arima_forecast_season[,2]
c(arima_forecast_season[,2], arima_forecast_season[,3])
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]))
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5", border = "NA")
par(mfrow = c(1, 1))
arima_forecast_season <- sapply(as.data.frame(forecast(model.AR2, h =3)) + stl.fit$time.series[(165-12):(167-12), 1],
InvBoxCox,
lambda = lambda)
arima_fitted_season <- InvBoxCox(model.AR1$fitted + stl.fit$time.series[141:164, 1], lambda = lambda)
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27))
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5", border = "NA")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27), main = "Forecast on real scale")
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27), main = "AR(2) Forecast on real scale")
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5", border = "NA")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
legend("bottomleft", legend=c("Real", "Prediction"), col=c('black', 'red'), lty = 1:1, cex=0.8)
legend("bottomleft", legend=c("Real", "Prediction", "Point Forecast"), col=c('black', 'red', "#0000AA"), lty = 1:1, cex=0.8)
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27), ylim = c(19, 26), main = "AR(2) Forecast on real scale")
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27), ylim = c(15, 28), main = "AR(2) Forecast on real scale")
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5", border = "NA")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
legend("bottomleft", legend=c("Real", "Prediction", "Point Forecast"), col=c('black', 'red', "#0000AA"), lty = 1:1, cex=0.8)
plot(forecast(stl.fit, h = 3))
arima_forecast_season <- sapply(as.data.frame(forecast(model.AR2, h =3)) + stl.fit$time.series[(165-12):(167-12), 1],
InvBoxCox,
lambda = lambda)
arima_fitted_season <- InvBoxCox(model.AR1$fitted + stl.fit$time.series[141:164, 1], lambda = lambda)
plot(data[141:164], type = 'l', ylab = "Value", xlab = "Date", xlim = c(1, 27), ylim = c(15, 28), main = "AR(2) Forecast on real scale")
lines(arima_fitted_season, col = 'red')
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,4], arima_forecast_season[,5]), col = "#D5DBFF", border =  "NA")
polygon(x = c(25, 26, 27, 27, 26, 25), y = c(arima_forecast_season[,2], arima_forecast_season[,3]), col = "#596DD5", border = "NA")
points(x = c(25, 26, 27), y = arima_forecast_season[, 1], pch = 16, col = "#0000AA")
legend("bottomleft", legend=c("Real", "Prediction", "Point Forecast"), col=c('black', 'red', "#0000AA"), lty = 1:1, cex=0.8)
data <- auscafe
plot(data,
main = "Monthly expenditure on eating out in Australia",
ylab = "Expenditure")
lambda <- BoxCox.lambda(data)
data.stabilized <- BoxCox(data, lambda)
plot(data.stabilized,
main = 'Monthly expenditure on eating out in Australia after BoxCox',
ylab = 'Value')
stl.fit <- stl(data.stabilized, s.window = 12)
plot(stl.fit)
data.trend <- data.stabilized - stl.fit$time.series[, 1]
plot(data.trend, main = "Monthly expenditure on eating out - \n Stabilized and without seasonality",
ylab = "Value")
adf.test(data.trend)
#Testing diff 1
adf.test(diff(data.trend))
plot(diff(data.trend),
main = 'auscafe series (diff 1)',
ylab = 'Value')
par(mfrow = c(2, 1))
acf(diff(data.trend), main = "ACF auscafe series (diff 1)")
pacf(diff(data.trend), main = "PACF auscafe series (diff 1)")
eval_AR1 <- function(data){
m <- Arima(data, order = c(1, 1, 0))
return(AIC(m))
}
AIC_AR1 <- rollapply(data.trend, width = 24, FUN = eval_AR1)
model.AR1 <- Arima(data.trend[403:426], order = c(1, 1, 0))
summary(model.AR1)
\par(mfrow = c(1, 1))
par(mfrow = c(1, 1))
plot(forecast(model.AR1, h = 3, lambda = lambda, biasadj = TRUE), include = 0,
xlim = c(0, 28), ylim = c(3.4, 3.8))
lines(InvBoxCox(model.AR1$fitted, lambda = lambda), col = 'red')
lines(InvBoxCox(data.trend[403:426], lambda = lambda))
eval_AR2 <- function(data){
m <- Arima(data, order = c(2, 1, 0), lambda = lambda, method="ML")
return(AIC(m))
}
AIC_AR2 <- rollapply(data.trend, width = 24, FUN = eval_AR2)
model.AR2 <- Arima(data.trend[403:426], order = c(2, 1, 0))
summary(model.AR2)
plot(forecast(model.AR2, h = 3, lambda = lambda, biasadj = TRUE), include = 0,
xlim = c(0, 28), ylim = c(3.4, 3.8))
lines(InvBoxCox(model.AR2$fitted, lambda = lambda), col = 'red')
lines(InvBoxCox(data.trend[403:426], lambda = lambda))
eval_ARMA11 <- function(data){
m <- Arima(data, order = c(1, 1, 1), lambda = lambda, method="ML")
return(AIC(m))
}
AIC_ARMA11 <- rollapply(data.trend, width = 24, FUN = eval_ARMA21)
eval_ARMA11 <- function(data){
m <- Arima(data, order = c(1, 1, 1), method="ML")
return(AIC(m))
}
AIC_ARMA11 <- rollapply(data.trend, width = 24, FUN = eval_ARMA21)
eval_ARMA11 <- function(data){
m <- Arima(data, order = c(1, 1, 1), lambda = lambda, method="ML")
return(AIC(m))
}
AIC_ARMA11 <- rollapply(data.trend, width = 24, FUN = eval_ARMA21)
eval_ARMA11 <- function(data){
m <- Arima(data, order = c(1, 1, 1), lambda = lambda, method="ML")
return(AIC(m))
}
AIC_ARMA11 <- rollapply(data.trend, width = 24, FUN = eval_ARMA11)
model.ARMA11 <- Arima(data.trend[403:426], order = c(1, 1, 1))
summary(model.ARMA11)
plot(forecast(model.ARMA11, h = 3, lambda = lambda, biasadj = TRUE), include = 0,
xlim = c(0, 28), ylim = c(3.4, 3.8))
lines(InvBoxCox(model.ARMA11$fitted, lambda = lambda), col = 'red')
lines(InvBoxCox(data.trend[403:426], lambda = lambda))
eval_ARMA21 <- function(data){
m <- Arima(data, order = c(2, 1, 1), lambda = lambda, method="ML")
return(AIC(m))
}
AIC_ARMA21 <- rollapply(data.trend, width = 24, FUN = eval_ARMA21)
model.ARMA21 <- Arima(data.trend[403:426], order = c(2, 1, 1))
summary(model.ARMA21)
plot(forecast(model.ARMA21, h = 3, lambda = lambda, biasadj = TRUE), include = 0,
xlim = c(0, 28), ylim = c(3.4, 3.8))
lines(InvBoxCox(model.ARMA21$fitted, lambda = lambda), col = 'red')
lines(InvBoxCox(data.trend[403:426], lambda = lambda))
plot(AIC_AR1, ylim = c(-150, 150), ylab = "AIC", main = "Comparison between AICs of models")
lines(AIC_AR2, col = "blue")
lines(AIC_ARMA11, col = "green")
lines(AIC_ARMA21, col = "red")
legend("topleft", legend=c("AR(1)", "AR(2)", "ARMA(1, 1)", "ARMA(2, 1)"), col=c('black','blue', 'green','red'), lty = 1:1, cex=0.8)
checkresiduals(model.AR1, lag = 24)
jarque.bera.test(model.AR1$residuals)
plot(forecast(model.AR1, h = 3, lambda = lambda, biasadj = TRUE), include = 0,
xlim = c(0, 28), ylim = c(3.2, 4.1))
lines(InvBoxCox(model.AR1$fitted, lambda = lambda), col = 'red')
lines(data[403:426])
lines(InvBoxCox(data.trend[403:426], lambda = lambda), col = "blue")
legend("topleft", legend=c("Real", "Real without seasonality", "Prediction without seasonality"), col=c('black','blue', 'red'), lty = 1:1, cex=0.8)
library(readxl)
library(tseries)
library(magrittr)
library(zoo)
library(forecast)
CONSUMO <- read_excel('CONSUMO.XLS')
consumo <- ts(CONSUMO$consumo, start = c(1984), frequency = 12)
par(mfrow = c(2, 2))
#ACFs
## Z_t
plot(consumo, main = "Series consumo")
## \Delta Z_t
diff(consumo) %>% plot(main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  plot(main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% plot(main = "Series diff(diff(consumo, 4))")
par(mfrow = c(2, 2))
#ACFs
## Z_t
acf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% acf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  acf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
#PACFs
## Z_t
pacf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% pacf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  pacf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
mod2 <- Arima(consumo, order = c(0, 0, 1), seasonal = c(1, 1, 0))
summary(mod2)
mod2 %>% checkresiduals()
mod3 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(1, 1, 0))
summary(mod3)
mod3 %>% checkresiduals()
#
mod4 <- Arima(consumo, order = c(1, 1, 1), seasonal = c(1, 1, 0))
summary(mod4)
mod4 %>% checkresiduals()
mod1 <- auto.arima(consumo,)
summary(mod1)
setwd("C:/Users/giova/Desktop/FGV/time_series/sarima")
source('C:/Users/giova/Desktop/FGV/time_series/sarima/consumo.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tseries)
library(magrittr)
library(zoo)
library(forecast)
CONSUMO <- read_excel('CONSUMO.XLS')
consumo <- ts(CONSUMO$consumo, start = c(1984), frequency = 12)
par(mfrow = c(2, 2))
#ACFs
## Z_t
plot(consumo, main = "Series consumo")
## \Delta Z_t
diff(consumo) %>% plot(main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  plot(main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% plot(main = "Series diff(diff(consumo, 4))")
## \Delta \Delta_z
diff(consumo, lag = 12) %>% diff() %>% plot(main = "Series diff(diff(consumo, 12))")
library(readxl)
library(tseries)
library(magrittr)
library(zoo)
library(forecast)
CONSUMO <- read_excel('CONSUMO.XLS')
consumo <- ts(CONSUMO$consumo, start = c(1984), frequency = 12)
par(mfrow = c(2, 2))
#ACFs
## Z_t
plot(consumo, main = "Series consumo")
## \Delta Z_t
diff(consumo) %>% plot(main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 12) %>%  plot(main = "Series diff(consumo, 12)")
## \Delta \Delta_z
diff(consumo, lag = 12) %>% diff() %>% plot(main = "Series diff(diff(consumo, 12))")
par(mfrow = c(2, 2))
#ACFs
## Z_t
acf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% acf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  acf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
#PACFs
## Z_t
pacf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% pacf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  pacf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
#PACFs
par(mfrow = c(2, 2))
## Z_t
pacf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% pacf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 4) %>%  pacf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 4) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
#PACFs
par(mfrow = c(2, 2))
## Z_t
pacf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% pacf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 12) %>%  pacf(lag.max = 48, main = "Series diff(consumo, 12)")
## \Delta \Delta_z
diff(consumo, lag = 12) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(consumo, 12))")
par(mfrow = c(2, 2))
#ACFs
## Z_t
acf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% acf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 12) %>%  acf(lag.max = 48, main = "Series diff(consumo, 4)")
## \Delta \Delta_z
diff(consumo, lag = 12) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(consumo, 4))")
par(mfrow = c(2, 2))
#ACFs
## Z_t
acf(consumo, lag.max = 48)
## \Delta Z_t
diff(consumo) %>% acf(lag.max = 48, main = "Series diff(consumo)")
## \Delta_4 Z_t
diff(consumo, lag = 12) %>%  acf(lag.max = 48, main = "Series diff(consumo, 12)")
## \Delta \Delta_z
diff(consumo, lag = 12) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(consumo, 12))")
mod2 <- Arima(consumo, order = c(0, 0, 1), seasonal = c(1, 1, 0))
summary(mod2)
mod2 %>% checkresiduals()
mod3 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(1, 1, 0))
summary(mod3)
mod3 %>% checkresiduals()
#
mod4 <- Arima(consumo, order = c(1, 1, 1), seasonal = c(1, 1, 0))
summary(mod4)
mod4 %>% checkresiduals()
mod1 <- Arima(consumo, order = c(0, 0, 1), seasonal = c(1, 1, 0))
summary(mod1)
mod1 %>% checkresiduals()
mod2 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(1, 1, 0))
summary(mod2)
mod2 %>% checkresiduals()
mod3 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(2, 1, 0))
summary(mod3)
mod3 %>% checkresiduals()
mod4 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(3, 1, 0))
summary(mod4)
mod4 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(3, 1, 1))
summary(mod4)
mod4 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(3, 1, 0))
summary(mod4)
mod3 %>% checkresiduals()
mod4 %>% checkresiduals()
mod5 <- auto.arima(consumo)
summary(mod5)
mod1 <- Arima(consumo, order = c(0, 0, 1), seasonal = c(0, 1, 1))
summary(mod1)
mod1 %>% checkresiduals()
mod2 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(1, 1, 1))
summary(mod2)
mod2 %>% checkresiduals()
mod2 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(0, 1, 1))
summary(mod2)
mod2 %>% checkresiduals()
mod3 <- Arima(consumo, order = c(1, 0, 1), seasonal = c(1, 1, 1))
summary(mod3)
mod3 %>% checkresiduals()
mod5 <- auto.arima(consumo)
summary(mod5)
mod4 <- auto.arima(consumo)
summary(mod4)
forecast(mod3, h = 12)
plot(forecast(mod3, h = 12))
plot(auscafe)
library(readxl)
library(tseries)
library(magrittr)
library(zoo)
library(forecast)
library(fpp2)
CONSUMO <- read_excel('CONSUMO.XLS')
consumo <- ts(CONSUMO$consumo, start = c(1984), frequency = 12)
par(mfrow = c(2, 2))
plot(consumo, main = "Series consumo")
diff(consumo) %>% plot(main = "Series diff(consumo)")
diff(consumo, lag = 12) %>%  plot(main = "Series diff(consumo, 12)")
diff(consumo, lag = 12) %>% diff() %>% plot(main = "Series diff(diff(consumo, 12))")
library(readxl)
library(tseries)
library(magrittr)
library(zoo)
library(forecast)
library(fpp2)
CONSUMO <- read_excel('CONSUMO.XLS')
consumo <- ts(CONSUMO$consumo, start = c(1984), frequency = 12)
par(mfrow = c(2, 2))
plot(consumo, main = "Series consumo")
diff(consumo) %>% plot(main = "Series diff(consumo)")
diff(consumo, lag = 12) %>%  plot(main = "Series diff(consumo, 12)")
diff(consumo, lag = 12) %>% diff() %>% plot(main = "Series diff(diff(consumo, 12))")
plot(auscafe)
plot(auscafe, main = "Monthly Expenditure On Eating Out In Australia")
lambda <- BoxCox.lambda(auscafe)
lambda
par(mfrow = c(1, 2))
auscafe %>% diff() %>% plot()
par(mfrow = c(2, 1))
auscafe %>% diff() %>% plot()
par(mfrow = c(2, 1))
auscafe %>% diff() %>% plot()
auscafe %>% diff(12) %>% plot()
par(mfrow = c(2, 1))
auscafe %>% diff() %>% plot(main = "Serie diff 1")
auscafe %>% diff(12) %>% plot(main = "Série diff 12")
par(mfrow = c(2, 1))
auscafe %>% diff() %>% plot(main = "Serie diff 1")
auscafe %>% diff(12) %>% plot(main = "Serie diff 12")
par(mfrow = c(2, 1))
auscafe %>% diff() %>% plot(main = "Auscafe diff 1")
auscafe %>% diff(12) %>% plot(main = "Auscafe diff 12")
par(mfrow = c(2, 1))
auscafe %>% BoxCox(lambda) %>% diff() %>% plot(main = "Auscafe diff 1")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% plot(main = "Auscafe diff 12")
par(mfrow = c(2, 1))
auscafe %>% BoxCox(lambda) %>% diff() %>% acf(main = "Auscafe diff 1")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% acf(main = "Auscafe diff 12")
par(mfrow = c(2, 1))
auscafe %>% BoxCox(lambda) %>% diff() %>% acf(main = "ACF Auscafe diff 1")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% acf(main = "ACF Auscafe diff 12")
par(mfrow = c(2, 1))
auscafe %>% BoxCox(lambda) %>% diff() %>% pacf(main = "PACF Auscafe diff 1")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% pacf(main = "PACF Auscafe diff 12")
par(mfrow = c(2, 2))
auscafe %>% BoxCox(lambda) %>%  plot(main = "Auscafe")
auscafe %>% BoxCox(lambda) %>% diff() %>% plot(main = "Auscafe diff 1")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% plot(main = "Auscafe diff 12")
auscafe %>% BoxCox(lambda) %>% diff(12) %>% diff() %>% plot(main = "Auscafe diff(diff 12)")
par(mfrow = c(2, 2))
auscafe %>% acf(lag.max = 48)
auscafe %>% diff() %>% acf(lag.max = 48, main = "Series diff(auscafe)")
auscafe %>% diff(lag = 12) %>%  acf(lag.max = 48, main = "Series diff(auscafe, 12)")
auscafe %>% diff(lag = 12) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(auscafe, 12))")
par(mfrow = c(2, 2))
auscafe %>% pacf(lag.max = 48)
auscafe %>% diff() %>% pacf(lag.max = 48, main = "Series diff(auscafe)")
auscafe %>% diff(lag = 12) %>%  pacf(lag.max = 48, main = "Series diff(auscafe, 12)")
auscafe %>% diff(lag = 12) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(auscafe, 12))")
par(mfrow = c(2, 2))
auscafe %>% BoxCox(lambda) %>% acf(lag.max = 48)
auscafe %>% BoxCox(lambda) %>% diff() %>% acf(lag.max = 48, main = "Series diff(auscafe)")
auscafe %>% BoxCox(lambda) %>% diff(lag = 12) %>%  acf(lag.max = 48, main = "Series diff(auscafe, 12)")
auscafe %>% BoxCox(lambda) %>% diff(lag = 12) %>% diff() %>% acf(lag.max = 48, main = "Series diff(diff(auscafe, 12))")
par(mfrow = c(2, 2))
auscafe %>% BoxCox(lambda) %>% pacf(lag.max = 48)
auscafe %>% BoxCox(lambda) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(auscafe)")
auscafe %>% BoxCox(lambda) %>% diff(lag = 12) %>%  pacf(lag.max = 48, main = "Series diff(auscafe, 12)")
auscafe %>% BoxCox(lambda) %>% diff(lag = 12) %>% diff() %>% pacf(lag.max = 48, main = "Series diff(diff(auscafe, 12))")
mod1 <- arima(auscafe, order = c(0, 1, 1), seasonal = c(0, 1, 1))
summary(mod1)
checkresiduals(mod1)
mod1 <- arima(auscafe, order = c(0, 1, 1), seasonal = c(0, 1, 1), lambda = lambda)
?arima
?Arima
mod1 <- Arima(auscafe, order = c(0, 1, 1), seasonal = c(0, 1, 1), lambda = lambda)
summary(mod1)
checkresiduals(mod1)
mod2 <- Arima(auscafe, order = c(0, 1, 1), seasonal = c(1, 1, 1), lambda = lambda)
summary(mod2)
checkresiduals(mod2)
mod2 <- Arima(auscafe, order = c(1, 1, 1), seasonal = c(1, 1, 1), lambda = lambda)
summary(mod2)
mod2 <- Arima(auscafe, order = c(1, 1, 1), seasonal = c(1, 1, 1), lambda = lambda)
summary(mod2)
checkresiduals(mod2)
mod2 <- Arima(auscafe, order = c(0, 1, 1), seasonal = c(1, 1, 1), lambda = lambda)
summary(mod2)
mod3 <- auto.arima(auscafe, lambda = lambda)
summary(mod3)
checkresiduals(mod3)
mod2 <- Arima(auscafe, order = c(0, 1, 1), seasonal = c(1, 1, 1), lambda = lambda)
summary(mod2)
checkresiduals(mod2)
forecast(mod3, h = 12)
plot(forecast(mod3, h = 12))
plot(forecast(mod3, h = 12), include =  48)
plot(forecast(mod3, h = 12), include =  48, lambda = lambda)
plot(forecast(mod3, h = 12, lambda = lambda), include =  48)
plot(forecast(mod3, h = 12, lambda = lambda, biasadj =TRUE), include =  48)
plot(auscafe, include = 48)
plot(forecast(mod3, h = 12), include =  48)
plot(forecast(mod3, h = 12), include =  48)
